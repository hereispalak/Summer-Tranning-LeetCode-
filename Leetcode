// palindrome number
class Solution {
    public boolean isPalindrome(int x) {
        if(x==0) {
            return true;
        }
        if(x<0|| x%10==0){
            return false;
        }
         int reversed_int=0;
        while(x> reversed_int){
            int pop = x%10;
            x/=10;
            
            reversed_int= (reversed_int *10) + pop;
        }
        if(x==reversed_int ||x== reversed_int/10){
            return true;
        }
      else{
          return false;
      }      
    }
}
// reverse integer
class Solution {
    public int reverse(int x) {
        int reversed=0;
        int rem;
        while(x!=0){
            rem=x%10;
            x/=10;
            if(reversed > Integer.MAX_VALUE/10 || reversed==Integer.MAX_VALUE/10  && rem>7)
                return 0;
             if(reversed< Integer.MIN_VALUE/10 || reversed==Integer.MIN_VALUE/10 && rem<-8)
                return 0;
             reversed =(reversed*10)+rem;
            
        }
        return reversed;
        
    }
}
// reverse String

class Solution {
    public void reverseString(char[] s) {
        int start=0;
        int end= s.length-1;
        while(start<=end)
        {
            char temp=s[start];
            s[start]=s[end];
            s[end]=temp;
        start +=1;
        end -=1;
        } 
    }
}
